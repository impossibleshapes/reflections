What happens when you initialize a repository? Why do you need to do it?
	
	Initializing a repository is necessary for creating a repository.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

	The staging area gives us a chance to finalize what commits are going into a repository. The working directory is where we make the changes and the repository is where we keep the commits once we make those changes.
	
How can you use the staging area to make sure you have one commit per logical
change?

	Just by opening the staging area, it's possible to see what's in it.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
	
	If a major or experimental change is being made, creating a branch would allow us to make these changes without affecting the master. 

How do the diagrams help you visualize the branch structure?
	
	The diagrams helps me visualize the branch structure by being visualizing the branch structure.	

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

	Merging two branches together involves putting their commits back into the same flow. It's respresented this way to better understand how one branch merges into another.

What are the pros and cons of GitHub's automatic merging vs. always doing merges
manually?

	GitHub's automatic merging will not always be able to resolve conflicts between files, even if it's obvi to us.